name: Security

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 3 * * 1' # Weekly on Monday at 3 AM UTC
  workflow_dispatch:
    inputs:
      scan_type:
        description: 'Type of security scan to run'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - dependencies
          - code
          - container

jobs:
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    if: ${{ inputs.scan_type == 'all' || inputs.scan_type == 'code' || inputs.scan_type == 'dependencies' }}
    permissions:
      security-events: write
      contents: read
      pull-requests: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: '1.25'
        cache: true
        cache-dependency-path: '**/go.sum'

    - name: Download dependencies
      run: go mod download

    - name: Run Trivy vulnerability scanner
      if: ${{ inputs.scan_type == 'all' || inputs.scan_type == 'dependencies' }}
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH,MEDIUM'
        ignore-unfixed: false

    - name: Upload Trivy scan results to GitHub Security tab
      if: always() && (inputs.scan_type == 'all' || inputs.scan_type == 'dependencies')
      uses: github/codeql-action/upload-sarif@v4
      with:
        sarif_file: 'trivy-results.sarif'

    - name: Run Gosec Security Scanner
      if: ${{ inputs.scan_type == 'all' || inputs.scan_type == 'code' }}
      uses: securecodewarrior/github-action-gosec@master
      with:
        args: '-fmt sarif -out gosec.sarif -severity medium -confidence medium ./...'

    - name: Upload Gosec scan results
      if: always() && (inputs.scan_type == 'all' || inputs.scan_type == 'code')
      uses: github/codeql-action/upload-sarif@v4
      with:
        sarif_file: gosec.sarif

    - name: Run Semgrep
      if: ${{ inputs.scan_type == 'all' || inputs.scan_type == 'code' }}
      uses: returntocorp/semgrep-action@v1
      with:
        config: >-
          p/security-audit
          p/secrets
          p/owasp-top-ten
        generateSarif: "1"
        generateGitlab: "0"
        generateJunit: "0"

    - name: Upload Semgrep scan results
      if: always() && (inputs.scan_type == 'all' || inputs.scan_type == 'code')
      uses: github/codeql-action/upload-sarif@v4
      with:
        sarif_file: /tmp/semgrep.sarif

  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest
    if: ${{ inputs.scan_type == 'all' || inputs.scan_type == 'dependencies' }}
    permissions:
      contents: read
      security-events: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: '1.25'
        cache: true
        cache-dependency-path: '**/go.sum'

    - name: Download dependencies
      run: go mod download

    - name: Run govulncheck
      run: |
        go install golang.org/x/vuln/cmd/govulncheck@latest
        govulncheck -json ./... > govulncheck-results.json || true
        cat govulncheck-results.json

    - name: Check for known vulnerabilities with Nancy
      run: |
        go install github.com/sonatypecommunity/nancy@latest
        go list -json -deps ./... | nancy sleuth

    - name: Run OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'mini-mcp'
        path: '.'
        format: 'SARIF'
        out: './dependency-check-report.sarif'

    - name: Upload Dependency Check results
      if: always()
      uses: github/codeql-action/upload-sarif@v4
      with:
        sarif_file: './dependency-check-report.sarif'

  license-check:
    name: License Check
    runs-on: ubuntu-latest
    if: ${{ inputs.scan_type == 'all' || inputs.scan_type == 'dependencies' }}
    permissions:
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: '1.25'
        cache: true
        cache-dependency-path: '**/go.sum'

    - name: Download dependencies
      run: go mod download

    - name: Run go-licenses
      run: |
        go install github.com/google/go-licenses@latest
        go-licenses report ./... > licenses.txt

    - name: Check for license compatibility
      run: |
        go install github.com/google/go-licenses@latest
        go-licenses check ./...

    - name: Upload license report
      uses: actions/upload-artifact@v4
      with:
        name: license-report
        path: licenses.txt
        retention-days: 30

  container-scan:
    name: Container Security Scan
    runs-on: ubuntu-latest
    if: ${{ inputs.scan_type == 'all' || inputs.scan_type == 'container' }}
    permissions:
      contents: read
      security-events: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Build Docker image
      run: |
        docker build -t mini-mcp:latest .

    - name: Run Trivy container scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'mini-mcp:latest'
        format: 'sarif'
        output: 'trivy-container-results.sarif'

    - name: Upload Trivy container scan results
      if: always()
      uses: github/codeql-action/upload-sarif@v4
      with:
        sarif_file: 'trivy-container-results.sarif'
